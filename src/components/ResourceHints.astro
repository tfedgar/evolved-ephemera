---
interface Resource {
  type: string;
  href: string;
  crossorigin?: boolean;
  as?: string;
}

const criticalResources: Resource[] = [
  // DNS prefetch and preconnect
  { type: 'dns-prefetch', href: 'https://fonts.googleapis.com' },
  { type: 'dns-prefetch', href: 'https://fonts.gstatic.com' },
  { type: 'preconnect', href: 'https://fonts.googleapis.com' },
  { type: 'preconnect', href: 'https://fonts.gstatic.com', crossorigin: true },
  
  // Stripe preconnect
  { type: 'dns-prefetch', href: 'https://js.stripe.com' },
  { type: 'preconnect', href: 'https://js.stripe.com', crossorigin: true },
  
  // Calendly preconnect
  { type: 'dns-prefetch', href: 'https://assets.calendly.com' },
  { type: 'dns-prefetch', href: 'https://booking-dfp.calendly.com' },
  { type: 'preconnect', href: 'https://assets.calendly.com', crossorigin: true },
  { type: 'preconnect', href: 'https://booking-dfp.calendly.com', crossorigin: true },
  
  // YouTube preconnect
  { type: 'dns-prefetch', href: 'https://www.youtube-nocookie.com' },
  { type: 'dns-prefetch', href: 'https://i.ytimg.com' },
  { type: 'preconnect', href: 'https://www.youtube-nocookie.com', crossorigin: true },
  { type: 'preconnect', href: 'https://i.ytimg.com', crossorigin: true },
];
---

{criticalResources.map(resource => {
  const linkProps: any = {
    rel: resource.type,
    href: resource.href
  };
  
  if (resource.crossorigin) {
    linkProps.crossorigin = true;
  }
  
  if (resource.as) {
    linkProps.as = resource.as;
  }
  
  return <link {...linkProps} />;
})} 
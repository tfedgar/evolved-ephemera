---
import feedTheFameImage from '../assets/feed-the-fame.png';
// PDF Download Section Component
---

<section class="pt-12 lg:pt-16 pb-12 lg:pb-16 bg-slate-50 text-slate-900" id="pdf-download">
  <div class="max-w-6xl mx-auto px-4 lg:px-6">
          <h2 class="section-title text-center text-slate-900 !mb-12 lg:!mb-16 font-bold">
      Feed the Fame
    </h2>
    <p class="text-center text-gray-600 mb-12 text-xl">
      Unlock exclusive insights and strategies to elevate your personal brand and achieve lasting success.
    </p>
    
    <div class="flex flex-col lg:flex-row gap-12 lg:gap-16 justify-center items-center">
      <!-- PDF Cover Image -->
      <div class="w-full max-w-xs lg:max-w-sm">
        <div class="relative">
          <img 
            src={feedTheFameImage.src} 
            alt="Feed the Fame PDF Cover" 
            class="w-full h-auto rounded-2xl shadow-2xl"
          />
        </div>
      </div>
      
      <!-- Purchase Information -->
      <div class="w-full max-w-md lg:max-w-lg">
        <div class="bg-white rounded-2xl p-8 lg:p-10 shadow-lg border border-gray-200">
          <h3 class="text-gray-900 mb-6 text-2xl font-bold">
            What You'll Get
          </h3>
          
          <ul class="space-y-4 mb-8">
            <li class="flex items-start gap-3">
              <div class="flex-shrink-0 w-8 h-8 bg-gradient-to-br from-slate-900 to-slate-800 rounded-lg flex items-center justify-center mt-0.5 shadow-lg border border-slate-700">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                </svg>
              </div>
              <span class="text-slate-700">Proven strategies for personal brand building</span>
            </li>
            <li class="flex items-start gap-3">
              <div class="flex-shrink-0 w-8 h-8 bg-gradient-to-br from-slate-900 to-slate-800 rounded-lg flex items-center justify-center mt-0.5 shadow-lg border border-slate-700">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                </svg>
              </div>
              <span class="text-slate-700">Step-by-step action plans</span>
            </li>
            <li class="flex items-start gap-3">
              <div class="flex-shrink-0 w-8 h-8 bg-gradient-to-br from-slate-900 to-slate-800 rounded-lg flex items-center justify-center mt-0.5 shadow-lg border border-slate-700">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                </svg>
              </div>
              <span class="text-slate-700">Real-world examples and case studies</span>
            </li>
            <li class="flex items-start gap-3">
              <div class="flex-shrink-0 w-8 h-8 bg-gradient-to-br from-slate-900 to-slate-800 rounded-lg flex items-center justify-center mt-0.5 shadow-lg border border-slate-700">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                </svg>
              </div>
              <span class="text-slate-700">Instant digital download</span>
            </li>
          </ul>
          
          <div class="text-center mb-8">
            <div class="text-4xl font-bold bg-gradient-to-r from-slate-900 via-slate-700 to-slate-900 bg-clip-text text-transparent mb-2">$2.99</div>
            <div class="text-slate-600">One-time purchase • Lifetime access</div>
          </div>
          
          <button 
            id="purchase-pdf-btn"
            class="w-full py-5 relative bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 text-white border-2 border-slate-700 hover:border-slate-500 text-xl cursor-pointer font-bold tracking-wide capitalize transition-all duration-300 hover:shadow-2xl transform hover:-translate-y-1 mb-4 group overflow-hidden"
          >
            <span class="relative z-10">Purchase & Download</span>
            <div class="absolute inset-0 bg-gradient-to-r from-emerald-600 to-emerald-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            <div class="absolute -inset-1 bg-gradient-to-r from-emerald-400 to-emerald-300 opacity-0 group-hover:opacity-20 blur-sm transition-opacity duration-300"></div>
          </button>
          
          <div class="text-center text-sm text-gray-500">
            Secure payment via Stripe • 30-day money-back guarantee
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // PDF Purchase Handler
  document.getElementById('purchase-pdf-btn')?.addEventListener('click', async function() {
    const button = this as HTMLButtonElement;
    const originalText = button.textContent;
    
    try {
      // Show loading state
      button.textContent = 'Processing...';
      button.disabled = true;
      button.classList.add('opacity-75');
      
      // Create form data for the API call
      const formData = new FormData();
      formData.append('productType', 'pdf');
      
      // Make API call to create checkout session
      const response = await fetch('/api/create-pdf-checkout-session', {
        method: 'POST',
        body: formData
      });
      
      console.log('Response status:', response.status);
      console.log('Response headers:', response.headers);
      
      if (response.status === 303) {
        // Redirect to Stripe checkout
        const checkoutUrl = response.headers.get('Location');
        console.log('Checkout URL:', checkoutUrl);
        if (checkoutUrl) {
          window.location.href = checkoutUrl;
        } else {
          throw new Error('No checkout URL received');
        }
      } else if (response.ok) {
        // Handle successful JSON response
        const responseData = await response.json().catch(() => ({}));
        console.log('API Response:', responseData);
        
        if (responseData.error) {
          throw new Error(responseData.error);
        } else if (responseData.checkoutUrl) {
          // Direct checkout URL response
          console.log('Redirecting to checkout:', responseData.checkoutUrl);
          window.location.href = responseData.checkoutUrl;
        } else {
          throw new Error('Unexpected response format');
        }
      } else {
        // Handle error responses
        const errorData = await response.json().catch(() => ({}));
        console.error('API Error Response:', errorData);
        throw new Error(errorData.error || `HTTP ${response.status}: Failed to create checkout session`);
      }
      
    } catch (error) {
      console.error('Purchase error:', error);
      
      // Show error message
      button.textContent = 'Error - Try Again';
      button.classList.remove('opacity-75');
      button.classList.add('bg-red-600', 'hover:bg-red-700');
      
      // Reset button after 3 seconds
      setTimeout(() => {
        button.textContent = originalText;
        button.disabled = false;
        button.classList.remove('opacity-75', 'bg-red-600', 'hover:bg-red-700');
        button.classList.add('hover:border-slate-500');
      }, 3000);
    }
  });
</script>
